---
- name: Parametrize OCI hosts 
  gather_facts: yes
  hosts: all 
  become: yes
  become_method: sudo

  vars_files:
    -  playbook_deploy_OCI_vars.yml

  tasks:
    - name: Updating sources 
      apt:
        update_cache: yes 
      when: ansible_os_family == "Debian"

    - name: Preconfiguring mailutils
      ansible.builtin.debconf:
        name: mailutils
        question: '{{ item.question }}'
        value: '{{ item.value }}'
        vtype: '{{ item.vtype }}'
      loop:
        - { question: 'mailutils/configuration-type', value: 'Local only', vtype: 'select' }

    - name: Installing software requirements
      ansible.builtin.package:
        name: 
          - cron
          - jq
          - bind9-host  
          - mailutils
        state: latest 

    - name: Creating /root/scripts directory 
      ansible.builtin.file:
        path: /root/scripts
        state: directory
        mode: '0700'     

    - name: Uploading DNS update scripts
      ansible.builtin.copy: 
        src: scripts/update-cloudflare-record.sh
        dest: /root/scripts/update-cloudflare-record.sh 
        owner: root 
        group: root
        mode: '0700'
         
    - name: Createing secrets file
      ansible.builtin.copy:
        dest: /root/scripts/.secrets  
        content: |
          zone=nik0chan.com
          cloudflare_auth_email=nicolasmantillasimon@gmail.com
          cloudflare_auth_key={{ cloudflare_api_key }} 
          notify_address=nicolasmantillasimon@gmail.com
        mode: '0600'

    - name: Creating update DNS schedule 
      ansible.builtin.cron:
        name: "Cloudflare update"  
        user: "root"
        job: "/root/scripts/update-cloudflare-record.sh {{ cloudflare_dns_name }}"  
        minute: "0"  
        hour: "*"  
        day: "*"  
        month: "*"  
        weekday: "*"         
 
    - name: Adding custom user 
      ansible.builtin.user:
        name: "{{ new_username }}"
        comment: Alternative administrator
        groups: sudo 
        state: present
        shell: "/bin/bash" 
        password: "{{ new_password | string | password_hash('sha512') }}"  

    - name: Remove ubuntu user limitation 
      ansible.builtin.lineinfile: 
        path: /root/.ssh/authorized_keys
        regexp: "^no-port-forwarding"
        state: absent

    - name: Configuring new user ssh access
      ansible.builtin.authorized_key:
        user: "{{ new_username }}"
        state: present
        key: "{{ lookup('file', 'files/id_rsa.pub') }}"
    
    - name: Configuring root ssh access
      ansible.builtin.authorized_key:
        user: root
        state: present
        key: "{{ lookup('file', 'files/id_rsa.pub') }}"

    - name: Removing ubuntu default user
      ansible.builtin.user:
        name: ubuntu 
        state: absent     
        force: true  
      ignore_errors: true  
...   
